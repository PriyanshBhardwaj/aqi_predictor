## it will take the model, extract last 24 hrs pollutant data from cpcb.ccr website and predict next 8 hrs aqi

import pickle
import xgboost as xgb
import numpy as np
import streamlit as st


from .aqi_calculator import calculate_AQI
# from data_extracter.aqi_ip_sample import create_aqi_input_sample


@st.cache_resource(ttl='7 days',show_spinner=False)
def load_model():
    model = pickle.load(open('./model/polls_xgb1.pkl', "rb"))
    return model


@st.cache_data(ttl='1d', show_spinner=False)
def model_predict(_aqi_model, pollutants_24hrs__data):
    preds = _aqi_model.predict([pollutants_24hrs__data])
    return preds



def predict_aqi(input_data, pollutants_data_list):
    #loading the model
    model = load_model()
    
    #loading the data
    pollutants_24hrs__data = input_data
    # predicted_polls = model.predict([pollutants_24hrs__data])
    # xgb_model_loaded.predict([[40.07, 83.13, 23.12, 32.09, 17.59, 0.5, 87.84, 42.11, 77.66, 22.8, 34.99, 18.67, 0.5, 77.24, 42.19, 91.32, 23.99, 37.07, 19.23, 0.52, 54.08, 46.56, 117.94, 26.76, 37.74, 20.43, 0.57, 49.19, 41.26, 89.94, 25.98, 45.65, 20.89, 0.54, 74.2, 29.89, 49.0, 24.82, 49.26, 21.13, 0.49, 67.97, 21.53, 29.13, 24.41, 47.12, 22.1, 0.47, 74.16, 20.47, 21.52, 22.38, 44.92, 22.04, 0.46, 64.41, 20.02, 27.18, 21.74, 44.44, 19.3, 0.46, 57.7, 18.8, 29.41, 24.76, 47.33, 22.6, 0.45, 76.66, 17.06, 31.94, 23.72, 50.21, 23.67, 0.44, 78.14, 16.85, 24.41, 21.24, 49.22, 24.48, 0.43, 69.5, 14.83, 25.48, 21.03, 46.43, 23.43, 0.4, 83.16, 14.43, 21.49, 20.14, 44.29, 22.78, 0.39, 64.78, 13.28, 30.23, 20.08, 46.6, 23.04, 0.4, 48.74, 15.6, 40.22, 20.23, 46.1, 23.39, 0.4, 27.5, 20.39, 34.91, 21.61, 44.11, 23.79, 0.44, 30.51, 25.36, 34.08, 22.03, 38.87, 22.67, 0.46, 49.42, 25.96, 28.38, 23.43, 32.5, 21.48, 0.45, 63.65, 26.85, 39.93, 32.35, 29.65, 5.64, 0.36, 75.54, 24.86, 38.46, 23.82, 36.32, 8.82, 0.37, 79.08, 21.37, 40.84, 22.5, 35.24, 11.72, 0.38, 80.71, 25.53, 57.55, 22.11, 35.46, 13.9, 0.4, 79.74, 27.64, 63.56, 22.66, 31.92, 15.12, 0.44, 68.01], [42.11, 77.66, 22.8, 34.99, 18.67, 0.5, 77.24, 42.19, 91.32, 23.99, 37.07, 19.23, 0.52, 54.08, 46.56, 117.94, 26.76, 37.74, 20.43, 0.57, 49.19, 41.26, 89.94, 25.98, 45.65, 20.89, 0.54, 74.2, 29.89, 49.0, 24.82, 49.26, 21.13, 0.49, 67.97, 21.53, 29.13, 24.41, 47.12, 22.1, 0.47, 74.16, 20.47, 21.52, 22.38, 44.92, 22.04, 0.46, 64.41, 20.02, 27.18, 21.74, 44.44, 19.3, 0.46, 57.7, 18.8, 29.41, 24.76, 47.33, 22.6, 0.45, 76.66, 17.06, 31.94, 23.72, 50.21, 23.67, 0.44, 78.14, 16.85, 24.41, 21.24, 49.22, 24.48, 0.43, 69.5, 14.83, 25.48, 21.03, 46.43, 23.43, 0.4, 83.16, 14.43, 21.49, 20.14, 44.29, 22.78, 0.39, 64.78, 13.28, 30.23, 20.08, 46.6, 23.04, 0.4, 48.74, 15.6, 40.22, 20.23, 46.1, 23.39, 0.4, 27.5, 20.39, 34.91, 21.61, 44.11, 23.79, 0.44, 30.51, 25.36, 34.08, 22.03, 38.87, 22.67, 0.46, 49.42, 25.96, 28.38, 23.43, 32.5, 21.48, 0.45, 63.65, 26.85, 39.93, 32.35, 29.65, 5.64, 0.36, 75.54, 24.86, 38.46, 23.82, 36.32, 8.82, 0.37, 79.08, 21.37, 40.84, 22.5, 35.24, 11.72, 0.38, 80.71, 25.53, 57.55, 22.11, 35.46, 13.9, 0.4, 79.74, 27.64, 63.56, 22.66, 31.92, 15.12, 0.44, 68.01, 29.94, 67.32, 22.59, 34.0, 16.26, 0.44, 62.84]])
    # print(np.array(predicted_aqis).tolist()[0], '\n\n\n')


    aqis = []
    polls = {0:[], 1:[], 2:[], 3:[], 4:[], 5:[], 6:[]}

    for i in range(8):
        hrs_24_avg_pollutants = []

        ##predicting from model
        preds = model_predict(model, pollutants_24hrs__data)

        pollutants_24hrs__data = pollutants_24hrs__data[7:]
        pollutants_24hrs__data+= np.array(preds).tolist()[0]

        # print(np.array(preds).tolist()[0])

        #creating list of predicted values of each pollutants
        for j in range(len(np.array(preds).tolist()[0])):
            polls[j].append(np.array(preds).tolist()[0][j])
            # print(np.array(preds).tolist()[0][j])

            pollutants_data_list[j] = pollutants_data_list[j][1:]
            pollutants_data_list[j].append(np.array(preds).tolist()[0][j])
        
            hrs_24_avg_pollutants.append(int(np.average(pollutants_data_list[j])))
        
        # print(hrs_24_avg_pollutants)

        # #calculating aqi from predicted values
        # new_aqi = calculate_AQI(np.array(preds).tolist()[0])

        #calculating aqi from 24 hrs avg pollutants values
        new_aqi = calculate_AQI(hrs_24_avg_pollutants)
        
        # print(new_aqi, '\n')
        aqis.append(new_aqi)

        # print(aqi_value)
        # print(len(polls_data))
        # print(polls_data)
        # break

    # print('\n\n\n', aqis)
    # print('\n\n\n', polls)

    return aqis, polls


# predicted_aqi, polls = predict_aqi([48.22, 68.88, 22.41, 27.21, 2.04, 0.62, 56.36, 49.92, 71.31, 22.58, 26.62, 1.78, 0.68, 56.37, 56.76, 81.09, 22.66, 26.17, 1.72, 0.74, 56.35, 61.61, 88.01, 22.97, 26.82, 1.74, 0.88, 56.31, 81.13, 115.9, 22.61, 27.27, 2.4, 1.03, 56.35, 97.31, 139.0, 22.95, 26.91, 2.36, 1.2, 56.29, 112.48, 160.69, 22.88, 27.23, 2.56, 1.38, 56.35, 118.61, 169.44, 11.72, 31.01, 2.53, 1.46, 56.29, 126.68, 180.98, 14.3, 56.28, 2.07, 1.52, 34.89, 155.13, 221.62, 14.22, 56.37, 2.08, 1.56, 34.89, 203.78, 291.1, 10.54, 45.18, 2.17, 1.64, 43.64, 220.96, 315.64, 10.6, 45.22, 2.13, 1.67, 43.63, 207.14, 295.91, 11.69, 39.5, 2.34, 1.42, 26.93, 188.59, 269.42, 11.62, 39.4, 2.37, 1.36, 26.97, 193.01, 275.73, 19.7, 43.36, 2.48, 1.47, 32.86, 307.56, 439.38, 19.86, 44.11, 2.48, 1.64, 32.85, 223.2, 318.86, 12.74, 36.9, 2.33, 1.58, 67.33, 139.15, 198.78, 12.82, 36.2, 2.56, 1.4, 67.37, 119.01, 170.01, 22.66, 27.0, 2.53, 1.2, 56.39, 109.12, 155.87, 22.73, 26.43, 2.57, 1.09, 56.39, 132.69, 189.55, 23.12, 27.69, 2.72, 0.97, 56.33, 143.39, 204.84, 22.58, 26.74, 2.97, 0.92, 56.31, 130.27, 186.11, 22.59, 26.28, 3.3, 0.83, 56.26, 114.52, 163.6, 22.55, 26.52, 3.43, 0.7, 56.33], [[222.46, 218.09, 211.79, 196.22, 197.51, 197.61, 207.74, 177.1, 159.26, 133.21, 107.73, 95.2, 88.92, 98.98, 111.78, 121.38, 132.82, 147.05, 154.56, 148.06, 'nan', 'nan', 102.22, 95.75], [317.8, 311.56, 302.56, 280.31, 282.14, 282.3, 296.78, 252.99, 227.42, 190.19, 153.91, 136.0, 126.98, 141.41, 159.65, 173.37, 189.68, 210.02, 220.8, 211.52, 'nan', 'nan', 146.03, 136.79], [22.91, 22.57, 22.65, 22.65, 22.86, 22.67, 11.63, 14.21, 14.19, 10.6, 10.52, 11.65, 11.66, 19.98, 19.67, 12.68, 13.15, 22.68, 22.89, 23.06, 'nan', 'nan', 22.8, 22.21], [26.8, 26.41, 26.36, 27.18, 27.02, 27.07, 31.86, 56.31, 56.33, 45.17, 45.19, 39.42, 39.45, 44.0, 43.39, 36.18, 36.11, 27.1, 26.45, 26.5, 'nan', 'nan', 25.7, 26.97], [2.0, 2.17, 2.35, 2.45, 2.63, 2.84, 2.86, 2.41, 2.44, 2.43, 2.58, 3.1, 3.25, 3.33, 3.27, 1.97, 2.02, 1.92, 1.69, 2.13, 'nan', 'nan', 89.2, 2.6], [0.96, 0.92, 1.02, 1.1, 1.16, 1.28, 1.26, 1.11, 1.1, 1.06, 1.02, 0.99, 0.99, 1.01, 1.0, 1.04, 1.13, 1.22, 1.15, 0.3, 0.0, 0.0, 0.4, 0.76], [56.34, 56.3, 56.35, 56.35, 56.35, 56.35, 56.31, 34.81, 34.83, 43.65, 43.68, 26.98, 27.04, 32.83, 32.83, 67.35, 67.35, 56.28, 56.36, 56.33, 'nan', 'nan', 56.33, 56.17]])
# print(predicted_aqi, polls, sep='\n\n')
# # print(polls[0][0])